import { useState, useEffect } from 'react'; import './App.css'; type Todo = { id: number; text: string; completed: boolean }; type Filter = 'all' | 'active' | 'completed'; function App() { const [todos, setTodos] = useState<Todo[]>(() => { const saved = localStorage.getItem('todos'); return saved ? JSON.parse(saved) : []; }); const [input, setInput] = useState(''); const [filter, setFilter] = useState<Filter>('all'); useEffect(() => { localStorage.setItem('todos', JSON.stringify(todos)); }, [todos]); const addTodo = (e: React.FormEvent) => { e.preventDefault(); if (input.trim()) { setTodos([...todos, { id: Date.now(), text: input.trim(), completed: false }]); setInput(''); } }; const toggleTodo = (id: number) => { setTodos(todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo)); }; const deleteTodo = (id: number) => { setTodos(todos.filter(todo => todo.id !== id)); }; const clearCompleted = () => { setTodos(todos.filter(todo => !todo.completed)); }; const filteredTodos = todos.filter(todo => { if (filter === 'active') return !todo.completed; if (filter === 'completed') return todo.completed; return true; }); const activeCount = todos.filter(todo => !todo.completed).length; return (<div className="app"><div className="container"><h1>üìù Todo List</h1><form onSubmit={addTodo} className="input-form"><input type="text" value={input} onChange={(e) => setInput(e.target.value)} placeholder="What needs to be done?" className="todo-input" /><button type="submit" className="add-btn">Add</button></form>{todos.length > 0 && (<><ul className="todo-list">{filteredTodos.map(todo => (<li key={todo.id} className={`todo-item ${todo.completed ? 'completed' : ''}`}><input type="checkbox" checked={todo.completed} onChange={() => toggleTodo(todo.id)} className="checkbox" /><span className="todo-text">{todo.text}</span><button onClick={() => deleteTodo(todo.id)} className="delete-btn">√ó</button></li>))}</ul><div className="footer"><span className="count">{activeCount} {activeCount === 1 ? 'item' : 'items'} left</span><div className="filters"><button className={filter === 'all' ? 'active' : ''} onClick={() => setFilter('all')}>All</button><button className={filter === 'active' ? 'active' : ''} onClick={() => setFilter('active')}>Active</button><button className={filter === 'completed' ? 'active' : ''} onClick={() => setFilter('completed')}>Completed</button></div>{todos.some(t => t.completed) && (<button onClick={clearCompleted} className="clear-btn">Clear completed</button>)}</div></>)}</div></div>); } export default App;